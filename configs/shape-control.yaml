name: "shape-controlnet"
tag: "${rmspace:${system.prompt_processor.prompt},_}"
exp_root_dir: "outputs"
seed: 0

data_type: "random-camera-datamodule"
data:
  batch_size: 1
  width: 176
  height: 176
  camera_distance_range: [1.5, 2.0]
  #fovy_range: [15, 60]
  #elevation_range: [0, 30]
  fovy_range: [35, 70]
  elevation_range: [-10, 45]
  light_sample_strategy: "magic3d"
  eval_camera_distance: 2.0
  eval_fovy_deg: 70.

system_type: "shape-controlnet-system"
system:
  geometry_type: "implicit-volume"
  geometry:
    radius: 2.0
    normal_type: "analytic"
    # the density initialization proposed in the DreamFusion paper
    # does not work very well
    # density_bias: "blob_dreamfusion"
    # density_activation: exp
    # density_blob_scale: 5.
    # density_blob_std: 0.2
    # use Magic3D density initialization instead
    density_bias: "blob_magic3d"
    density_activation: softplus
    density_blob_scale: 10.
    density_blob_std: 0.5
    # coarse to fine hash grid encoding
    # to ensure smooth analytic normals
    pos_encoding_config:
      otype: ProgressiveBandHashGrid
      n_levels: 16
      n_features_per_level: 2
      log2_hashmap_size: 19
      base_resolution: 16
      per_level_scale: 1.447269237440378 # max resolution 4096
      start_level: 8 # resolution ~200
      start_step: 2000
      update_steps: 500
  nvdiff_renderer_type: "nvdiff-rasterizer"
  nvdiff_renderer:
    context_type: cuda

  geometry_convert_inherit_texture: true
  mesh_geometry_type: "custom-mesh"
  mesh_geometry:
    shape_init: ???
    shape_init_params: 1.0
    radius: 1.0 # consistent with coarse
    pos_encoding_config:
      otype: HashGrid
      n_levels: 16
      n_features_per_level: 2
      log2_hashmap_size: 19
      base_resolution: 16
      per_level_scale: 1.4472692374403782 # max resolution 4096

  mesh_fitting_geometry_type: "mesh-fitting-obj-mesh"
  mesh_fitting_geometry:
    shape_init: ???
    shape_init_params: 1.0
    shape_init_mesh_up: "+y"
    shape_init_mesh_front: "+z"
  mesh_fitting_material_type: "diffuse-with-point-light-material"
  mesh_fitting_material:
    ambient_only_steps: 0
    soft_shading: true
  mesh_fitting_background_type: "solid-color-background"
  mesh_fitting_background:
    n_output_dims: 3
    color: [0, 0, 0]
  # mesh_fitting_background_type: "neural-environment-map-background"
  # mesh_fitting_background:
  #   color_activation: sigmoid
  mesh_fitting_renderer_type: "mesh-fitting-renderer"
  mesh_fitting_renderer:
    context_type: cuda
    
  material_type: "diffuse-with-point-light-material"
  material:
    ambient_only_steps: 3001
    albedo_activation: sigmoid

  background_type: "neural-environment-map-background"
  background:
    color_activation: sigmoid
    random_aug: true
  # background_type: "solid-color-background"
  # background:
  #   n_output_dims: 3
  #   color: [0, 0, 0]

  renderer_type: "nerf-volume-renderer"
  renderer:
    radius: ${system.geometry.radius}
    num_samples_per_ray: 512

  init_renderer_type: "nerf-volume-renderer"
  init_renderer:
    radius: ${system.geometry.radius}
    num_samples_per_ray: 512


  prompt_processor_type: "stable-diffusion-prompt-processor"
  prompt_processor:
    pretrained_model_name_or_path: "runwayml/stable-diffusion-v1-5"
    use_prompt_debiasing: false
    negative_prompt: "ugly, bad anatomy, blurry, pixelated obscure, unnatural colors, poor lighting, dull, and unclear, cropped, lowres, low quality, artifacts, duplicate, morbid, mutilated, poorly drawn face, deformed, dehydrated, bad proportions"
    prompt: ???

  original_prompt_processor_type: "stable-diffusion-prompt-processor"
  original_prompt_processor:
    pretrained_model_name_or_path: "runwayml/stable-diffusion-v1-5"
    use_prompt_debiasing: false
    negative_prompt: "ugly, bad anatomy, blurry, pixelated obscure, unnatural colors, poor lighting, dull, and unclear, cropped, lowres, low quality, artifacts, duplicate, morbid, mutilated, poorly drawn face, deformed, dehydrated, bad proportions"
    prompt: ${system.prompt_processor.prompt}

  guidance_type: "stable-diffusion-controlnet-img-guidance"
  guidance:
    control_type: "normal"
    min_step_percent: 0.02
    max_step_percent: 0.50
    condition_scale: 1.0
    guidance_scale: 100
    use_sds: true

  loggers:
    wandb:
      enable: true
      project: "threestudio"
      name: "1225_day_${system.prompt_processor.prompt}"

  loss:
    lambda_sds: 1.
    lambda_orient: [0, 10., 1000., 5000]
    lambda_sparsity: 1.
    lambda_opaque: 0.
    lambda_l1: 1.

  optimizer:
    name: Adam
    args:
      lr: 0.01
      betas: [0.9, 0.99]
      eps: 1.e-15
    params:
      geometry:
        lr: 0.01
      background:
        lr: 0.001
    # name: AdamW
    # args:
    #   lr: 0.01
    #   betas: [0.9, 0.99]
    #   eps: 1.e-15
    # params:
    #   geometry.encoding:
    #     lr: 0.01
    #   geometry.density_network:
    #     lr: 0.01
    #   geometry.feature_network:
    #     lr: 0.01
    #   background:
    #     lr: 0.001


trainer:
  max_steps: 10000
  log_every_n_steps: 1
  num_sanity_val_steps: 0
  val_check_interval: 200
  enable_progress_bar: true
  precision: 32

checkpoint:
  save_last: true # save at each validation time
  save_top_k: -1
  every_n_train_steps: ${trainer.max_steps}
